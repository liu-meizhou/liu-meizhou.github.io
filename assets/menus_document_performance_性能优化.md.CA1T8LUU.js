import{_ as l,c as t,e as a,a1 as r}from"./chunks/framework.C-01xEl2.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"menus/document/performance/性能优化.md","filePath":"menus/document/performance/性能优化.md","lastUpdated":1707281529000}'),n={name:"menus/document/performance/性能优化.md"};function i(m,e,o,u,s,c){return a(),t("div",null,e[0]||(e[0]=[r('<h2 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h2><p>性能优化主要可以从<strong>网络</strong>和<strong>渲染</strong>这两方面入手</p><p>网络的话可以联想到输入url到请求返回这个过程的网络优化，比如说</p><ul><li><a href="/menus/document/performance/优化实现/域名解析.html">域名解析</a><ul><li>DNS预解析</li><li>CDN域名加速</li></ul></li><li><a href="/menus/document/performance/优化实现/启用http2.html">启用http2</a></li><li><a href="/menus/document/performance/优化实现/使用缓存.html">使用缓存</a></li><li><a href="/menus/document/performance/优化实现/资源文件优化.html">资源文件优化</a><ul><li>资源包过大 <ul><li>压缩资源文件</li><li>webpack拆包</li></ul></li><li>CDN加速</li><li>图片懒加载</li></ul></li></ul><p>渲染方面主要有：</p><ul><li><a href="/menus/document/performance/优化实现/不要让js和css阻塞渲染.html">不要让js和css阻塞渲染</a></li><li>dom节点过多 <ul><li><a href="/menus/document/performance/优化实现/按需渲染.html">按需渲染</a><ul><li>虚拟滚动</li></ul></li><li><a href="/menus/document/brower/面试题汇总/重绘和重排.html">减少重绘重排</a></li></ul></li></ul>',6)]))}const f=l(n,[["render",i]]);export{d as __pageData,f as default};
