import{_ as l,c as a,e as t,a1 as i}from"./chunks/framework.C-01xEl2.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"menus/document/brower/面试题汇总/前端安全.md","filePath":"menus/document/brower/面试题汇总/前端安全.md","lastUpdated":1707281529000}'),r={name:"menus/document/brower/面试题汇总/前端安全.md"};function o(n,e,s,u,c,d){return t(),a("div",null,e[0]||(e[0]=[i('<h2 id="xss" tabindex="-1">XSS <a class="header-anchor" href="#xss" aria-label="Permalink to &quot;XSS&quot;">​</a></h2><ul><li>什么是XSS <ul><li>网页为了能更加动态的显示，使用html渲染页面，当数据来源不能保证时，XSS攻击也就随之而来</li></ul></li><li>如何预防 <ul><li>对未知数据进行过滤(对html做充分的转义，比如<code>&lt; &gt; { }</code>等字符)</li><li>设置兜底措施如给cookie加上httpOnly，对高危操作加上验证功能</li></ul></li></ul><h2 id="csrf" tabindex="-1">CSRF <a class="header-anchor" href="#csrf" aria-label="Permalink to &quot;CSRF&quot;">​</a></h2><ul><li>什么是CSRF <ul><li>攻击者能够伪造你的账号去发送请求</li></ul></li><li>如何预防 <ul><li>检查header里面的origin和referer</li><li>不要用cookie作为认证手段，改成token</li><li></li></ul></li></ul><h2 id="中间人攻击" tabindex="-1">中间人攻击 <a class="header-anchor" href="#中间人攻击" aria-label="Permalink to &quot;中间人攻击&quot;">​</a></h2><p>https</p>',6)]))}const p=l(r,[["render",o]]);export{m as __pageData,p as default};
