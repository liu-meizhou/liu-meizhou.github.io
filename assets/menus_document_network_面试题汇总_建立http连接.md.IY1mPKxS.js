import{_ as e,c as a,e as o,a1 as l}from"./chunks/framework.C-01xEl2.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"menus/document/network/面试题汇总/建立http连接.md","filePath":"menus/document/network/面试题汇总/建立http连接.md","lastUpdated":1707281529000}'),i={name:"menus/document/network/面试题汇总/建立http连接.md"};function n(r,t,u,d,h,s){return o(),a("div",null,t[0]||(t[0]=[l('<h2 id="http响应的状态码有啥" tabindex="-1">http响应的状态码有啥 <a class="header-anchor" href="#http响应的状态码有啥" aria-label="Permalink to &quot;http响应的状态码有啥&quot;">​</a></h2><p>只说常见的就行，不然扩展开来不行了</p><ul><li>200 OK：请求成功，服务器成功处理了请求。</li><li>301 Moved Permanently：请求的资源已永久移动到新的位置。</li><li>302 Found：请求的资源临时从不同的URI响应请求。</li><li>304 Not Modified：资源未被修改，可以使用缓存的版本。</li><li>401 Unauthorized：请求需要用户身份验证。</li><li>404 Not Found：请求的资源不存在。</li><li>500 Internal Server Error：服务器遇到了意外情况，无法完成请求。</li><li>504 Gateway Timeout：网关超时</li></ul><h2 id="_301和302的区别" tabindex="-1">301和302的区别 <a class="header-anchor" href="#_301和302的区别" aria-label="Permalink to &quot;301和302的区别&quot;">​</a></h2><ol><li>永久重定向（301 Moved Permanently）：表示请求的资源已经被永久移动到了新的位置，搜索引擎会把新的URL地址(相应头会带上location)作为该资源的唯一标识，以后所有的请求都会被重定向到新的URL地址。因此，永久重定向适用于原始URL地址已经过时或不再使用的情况。</li><li>临时重定向（302 Found）：表示请求的资源临时从不同的URI响应请求，客户端应该继续使用原始URL地址进行访问。临时重定向适用于暂时性的重定向，例如网站正在维护或者某个页面正在更新，暂时需要将用户重定向到其他页面。</li></ol><h2 id="post请求的数据格式" tabindex="-1">POST请求的数据格式 <a class="header-anchor" href="#post请求的数据格式" aria-label="Permalink to &quot;POST请求的数据格式&quot;">​</a></h2><ol><li>application/x-www-form-urlencoded：这是最常见的POST请求数据格式，也是默认的数据格式。在这种格式下，请求数据被编码为键值对的形式，每个键值对之间用&quot;&amp;&quot;符号分隔，键和值之间用&quot;=&quot;符号分隔。例如：name=John&amp;age=25。</li><li>multipart/form-data：这种格式通常用于上传文件或二进制数据。在这种格式下，请求数据被分割成多个部分，每个部分包含一个Content-Disposition头和一个Content-Type头，用于描述数据的类型和名称。</li><li>application/json：这种格式用于提交JSON格式的数据。在这种格式下，请求数据被编码为JSON字符串。例如：{&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 25}。</li></ol><h2 id="get和post请求的区别" tabindex="-1">GET和POST请求的区别 <a class="header-anchor" href="#get和post请求的区别" aria-label="Permalink to &quot;GET和POST请求的区别&quot;">​</a></h2><ul><li>语义的区别：定义的使用场景不同，get用于获取文件，post用于向服务器传输数据</li><li>缓存：get请求更好缓存，用url直接做缓存的key值</li></ul><h2 id="关联链接" tabindex="-1">关联链接 <a class="header-anchor" href="#关联链接" aria-label="Permalink to &quot;关联链接&quot;">​</a></h2><ul><li><a href="/menus/document/brower/面试题汇总/浏览器缓存.html">浏览器缓存</a></li></ul>',11)]))}const c=e(i,[["render",n]]);export{m as __pageData,c as default};
