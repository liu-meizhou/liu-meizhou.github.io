import{_ as l,c as e,e as a,a1 as i}from"./chunks/framework.C-01xEl2.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"menus/document/network/面试题汇总/建立https连接.md","filePath":"menus/document/network/面试题汇总/建立https连接.md","lastUpdated":1707281529000}'),s={name:"menus/document/network/面试题汇总/建立https连接.md"};function o(r,t,n,h,p,d){return a(),e("div",null,t[0]||(t[0]=[i('<h2 id="https和http建立连接的区别" tabindex="-1">https和http建立连接的区别 <a class="header-anchor" href="#https和http建立连接的区别" aria-label="Permalink to &quot;https和http建立连接的区别&quot;">​</a></h2><p>HTTPS在HTTP的基础上添加了SSL/TLS协议，通过在TCP连接建立之前进行SSL握手，建立安全的加密通道。数据在传输过程中被加密，并且在接收端进行解密。</p><h2 id="ssl握手" tabindex="-1">SSL握手 <a class="header-anchor" href="#ssl握手" aria-label="Permalink to &quot;SSL握手&quot;">​</a></h2><ol><li>客户端向服务器发送SSL握手请求，请求建立安全连接。</li><li>服务器向客户端发送SSL证书，证书包含服务器的公钥和证书信息。(证书由证书颁发机构（CA）颁发)</li><li>客户端验证服务器的证书是否合法，包括证书的颁发机构、有效期、域名等信息。</li><li>客户端生成一个随机数，用于后续的加密和解密过程。</li><li>客户端使用服务器的公钥对随机数进行加密，并将加密后的数据发送给服务器。</li><li>服务器使用私钥对客户端发送的数据进行解密，得到随机数。</li><li>客户端和服务器使用随机数生成对称密钥，用于后续的数据加密和解密。</li><li>客户端向服务器发送握手完成通知，表示SSL握手过程完成，可以开始进行数据传输。</li></ol><h2 id="https会把请求头部加密吗" tabindex="-1">https会把请求头部加密吗 <a class="header-anchor" href="#https会把请求头部加密吗" aria-label="Permalink to &quot;https会把请求头部加密吗&quot;">​</a></h2><ul><li>客户端和服务器之间的所有数据都会被加密传输，包括请求头部、请求体、响应头部和响应体等</li></ul><p>可以从网络结构图看，SSL/TLS位于传输层与应用层之间，应用层的数据走到传输层则会被全部加密，但传输层的包数据就不会被加密，比如TCP包信息还有网络层包信息等</p><ol><li>应用层</li><li>传输层</li><li>网络层</li><li>数据链路层</li><li>物理层</li></ol>',8)]))}const u=l(s,[["render",o]]);export{S as __pageData,u as default};
