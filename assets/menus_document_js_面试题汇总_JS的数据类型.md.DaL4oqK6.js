import{_ as o,c as t,e as a,a1 as c}from"./chunks/framework.C-01xEl2.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"menus/document/js/面试题汇总/JS的数据类型.md","filePath":"menus/document/js/面试题汇总/JS的数据类型.md","lastUpdated":1707281529000}'),d={name:"menus/document/js/面试题汇总/JS的数据类型.md"};function n(r,e,l,i,s,u){return a(),t("div",null,e[0]||(e[0]=[c('<h2 id="js的数据类型" tabindex="-1">JS的数据类型 <a class="header-anchor" href="#js的数据类型" aria-label="Permalink to &quot;JS的数据类型&quot;">​</a></h2><p><code>Undefined</code>、<code>Null</code>、<code>Boolean</code>、<code>Number</code>、<code>String</code>、<code>Object</code>、<code>Symbol</code>、<code>BigInt</code></p><h2 id="检查数据类型的方法" tabindex="-1">检查数据类型的方法 <a class="header-anchor" href="#检查数据类型的方法" aria-label="Permalink to &quot;检查数据类型的方法&quot;">​</a></h2><ul><li>typeof</li><li>instanceof: 可以正确判断对象的类型，其内部运行机制是判断在其原型链中能否找到该类型的原型</li><li>constructor</li><li>Object.prototype.toString.call()</li></ul>',4)]))}const _=o(d,[["render",n]]);export{p as __pageData,_ as default};
