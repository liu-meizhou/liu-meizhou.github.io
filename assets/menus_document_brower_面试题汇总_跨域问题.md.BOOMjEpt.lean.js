import{_ as a,c as i,e,a1 as n}from"./chunks/framework.C-01xEl2.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"menus/document/brower/面试题汇总/跨域问题.md","filePath":"menus/document/brower/面试题汇总/跨域问题.md","lastUpdated":1707281529000}'),t={name:"menus/document/brower/面试题汇总/跨域问题.md"};function l(r,s,p,h,o,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h2 id="跨域问题一般怎么来解决" tabindex="-1">跨域问题一般怎么来解决 <a class="header-anchor" href="#跨域问题一般怎么来解决" aria-label="Permalink to &quot;跨域问题一般怎么来解决&quot;">​</a></h2><ol><li>使用JSONP（JSON with Padding）技术。JSONP是一种跨域访问资源的方式，它利用了script标签不受同源策略限制的特性，将JSON数据作为参数传递到一个回调函数中，并将该函数作为一个脚本动态插入到页面中。</li><li>使用CORS（Cross-origin Resource Sharing）技术。该技术通过在原生XHR对象上使用标准的HTTP头部来允许浏览器和服务器进行跨源通信，从而实现安全的跨域数据传输。</li><li>使用代理。将跨域请求发送到同源的服务器上，由该服务器向目标服务器请求数据，并将数据返回给页面，从而避免了跨域问题。</li></ol><h2 id="cors的header有什么" tabindex="-1">CORS的header有什么 <a class="header-anchor" href="#cors的header有什么" aria-label="Permalink to &quot;CORS的header有什么&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;Access-Control-Allow-Origin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;Access-Control-Allow-Methods&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;GET, POST, PUT, DELETE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;Access-Control-Allow-Headers&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Content-Type, Authorization&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="jsonp是怎么做的-为什么能实现跨域" tabindex="-1">jsonp是怎么做的，为什么能实现跨域 <a class="header-anchor" href="#jsonp是怎么做的-为什么能实现跨域" aria-label="Permalink to &quot;jsonp是怎么做的，为什么能实现跨域&quot;">​</a></h2><p>它利用了script标签不受同源策略限制的特性，将JSON数据作为参数传递到一个回调函数中，并将该函数作为一个脚本动态插入到页面中。</p><h2 id="怎么处理jsonp请求异常的情况" tabindex="-1">怎么处理jsonp请求异常的情况 <a class="header-anchor" href="#怎么处理jsonp请求异常的情况" aria-label="Permalink to &quot;怎么处理jsonp请求异常的情况&quot;">​</a></h2><p>他本质就是一个<code>script</code>标签，思考怎么判断js的资源加载失败就可以了</p><p>监听<code>onerror</code>事件进行判断</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,10)]))}const E=a(t,[["render",l]]);export{c as __pageData,E as default};
