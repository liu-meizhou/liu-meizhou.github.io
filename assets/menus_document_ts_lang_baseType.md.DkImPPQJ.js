import{_ as a,c as o,e as t,a1 as n}from"./chunks/framework.C-01xEl2.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"menus/document/ts/lang/baseType.md","filePath":"menus/document/ts/lang/baseType.md","lastUpdated":1708582554000}'),r={name:"menus/document/ts/lang/baseType.md"};function l(i,e,c,d,h,s){return t(),o("div",null,e[0]||(e[0]=[n('<h2 id="boolean" tabindex="-1">Boolean <a class="header-anchor" href="#boolean" aria-label="Permalink to &quot;Boolean&quot;">​</a></h2><h2 id="number" tabindex="-1">Number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;Number&quot;">​</a></h2><h2 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-label="Permalink to &quot;String&quot;">​</a></h2><h2 id="symbol" tabindex="-1">Symbol <a class="header-anchor" href="#symbol" aria-label="Permalink to &quot;Symbol&quot;">​</a></h2><h2 id="array" tabindex="-1">Array <a class="header-anchor" href="#array" aria-label="Permalink to &quot;Array&quot;">​</a></h2><h2 id="enum" tabindex="-1">Enum <a class="header-anchor" href="#enum" aria-label="Permalink to &quot;Enum&quot;">​</a></h2><p><strong>枚举</strong></p><blockquote><p>用于创建具有相关性且可以数完的常量</p><p>如方向(北南西东)、产品类型等</p><p>ts中可作为类型和值使用</p></blockquote><p><a href="https://play.vuejs.org/#eNp9UstOwzAQ/BXLl16qViqcqrRSgUjAoUVtERdfonQJLo5t+VEiRfl3vE4TAqLNxePZ9Xhm45qutJ6cPNA5TWxuuHbEgvOaiEwWC0adZXTJJEhfkgduIHdcSVIzScK33mz3j+MW7zavPU5Xu/0ZvqURNkz+FZn9UiELMopgNNRDNoKORWUkce04vAI5XJGLdyXTNk3wHjYOSi0yB2GHJ5IDPy3rehCoaZIpkhfqs0FDMh2o0XGYUK7kOy8mR6tkGGNMxWiuSs0FmI1GgTDFeZeX0UwI9fUcOWc8nHOEMx+Qf/7DH22FHKMvBiyYEzDa11xmCnBtOd2toQq4L5bq4EXovlLcglXCo8e27c7LQ7A96Itun0qtjOOy2Nu0ciBtFwqNYmcT+xkNb+n+SvQfuzeT23gu/DDafAPULszw" target="_blank" rel="noreferrer">Enum编译成JS</a></p><h2 id="any" tabindex="-1">Any <a class="header-anchor" href="#any" aria-label="Permalink to &quot;Any&quot;">​</a></h2><p><strong>任意类型: JS类型</strong></p><h2 id="unknown" tabindex="-1">Unknown <a class="header-anchor" href="#unknown" aria-label="Permalink to &quot;Unknown&quot;">​</a></h2><ol><li>所有类型都可以赋值给<code>Unknown</code></li><li><code>Unknown</code>只能赋值给<code>any</code>或者<code>Unknown</code></li><li><code>Unknown</code>类型只能直接读或直接改，不能做其他操作</li></ol><h2 id="tuple" tabindex="-1">Tuple <a class="header-anchor" href="#tuple" aria-label="Permalink to &quot;Tuple&quot;">​</a></h2><p><strong>元组</strong></p><blockquote><p>⽤于定义具有有限数量的数组类型</p><p>常用于函数的返回值</p></blockquote><h2 id="void" tabindex="-1">Void <a class="header-anchor" href="#void" aria-label="Permalink to &quot;Void&quot;">​</a></h2><blockquote><p>常用于函数的返回值表示返回为空</p></blockquote><h2 id="never" tabindex="-1">Never <a class="header-anchor" href="#never" aria-label="Permalink to &quot;Never&quot;">​</a></h2><blockquote><p>常用于函数的返回值表示无返回(报错或者死循环)</p></blockquote><h2 id="null和undefined" tabindex="-1">Null和Undefined <a class="header-anchor" href="#null和undefined" aria-label="Permalink to &quot;Null和Undefined&quot;">​</a></h2><h2 id="object、object和" tabindex="-1">object、Object和{} <a class="header-anchor" href="#object、object和" aria-label="Permalink to &quot;object、Object和{}&quot;">​</a></h2><h3 id="object" tabindex="-1">object <a class="header-anchor" href="#object" aria-label="Permalink to &quot;object&quot;">​</a></h3><p><strong>非JS的基本类型,表示引用类型</strong></p><h3 id="object-1" tabindex="-1">Object <a class="header-anchor" href="#object-1" aria-label="Permalink to &quot;Object&quot;">​</a></h3><p><strong>只能操作Object方法的any类型</strong></p><h3 id="" tabindex="-1">{} <a class="header-anchor" href="#" aria-label="Permalink to &quot;{}&quot;">​</a></h3><p><strong>一个没有成员的Object类型</strong></p>',28)]))}const p=a(r,[["render",l]]);export{b as __pageData,p as default};
